version: "3"

tasks:
  base:
    vars:
      AWS_REGION:
        sh: aws configure get region
      SERVER_REPO_URI:
        sh: aws ecr describe-repositories --repository-name slchess/server --query 'repositories[0].repositoryUri' --output text
      SERVER_LATEST_TAG:
        sh: aws ecr describe-images --repository-name slchess/server --query 'sort_by(imageDetails, &imagePushedAt)[-1].imageTags[0]' --output text
    cmds:
      - mkdir -p ./configs/aws
      - echo "AWS_REGION={{.AWS_REGION}}" > ./configs/aws/base.env
      - echo "SERVER_IMAGE_URI={{.SERVER_REPO_URI}}:{{.SERVER_LATEST_TAG}}" >> ./configs/aws/base.env

  generate:
    desc: Generate .env file for the current stack
    deps: [base]
    cmds:
      - task: generate-cognito
      - task: generate-lambda
      - task: generate-apigateway

  generate-cognito:
    internal: true
    vars:
      COGNITO_USER_POOL_ID:
        sh: aws cognito-idp list-user-pools --max-results 10 --query 'UserPools[?Name==`SlchessUserPool`].Id' --output text
        default:
      COGNITO_USER_POOL_CLIENT_ID:
        sh: aws cognito-idp list-user-pool-clients --user-pool-id {{.COGNITO_USER_POOL_ID}} --query 'UserPoolClients[?ClientName==`SlchessUserPoolClient`].ClientId' --output text
    cmds:
      - mkdir -p ./configs/aws
      - echo "COGNITO_USER_POOL_ID={{.COGNITO_USER_POOL_ID}}" > ./configs/aws/cognito.env
      - echo "COGNITO_USER_POOL_CLIENT_ID={{.COGNITO_USER_POOL_CLIENT_ID}}" >> ./configs/aws/cognito.env

  generate-lambda:
    internal: true
    cmds:
      - mkdir -p ./configs/aws
      - echo "END_GAME_FUNCTION_NAME=slchess-EndGame" > ./configs/aws/lambda.env
      - echo "GAME_STATE_PUT_FUNCTION_NAME=slchess-GameStatePut" >> ./configs/aws/lambda.env

  generate-apigateway:
    internal: true
    vars:
      API_ID:
        sh: aws apigateway get-rest-apis --query "items[?name=='SlchessApi'].id" --output text
      STAGE: prod
    cmds:
      - mkdir -p ./configs/aws
      - echo "API_URL=https://{{.API_ID}}.execute-api.$AWS_REGION.amazonaws.com/{{.STAGE}}" > ./configs/aws/apigateway.env
